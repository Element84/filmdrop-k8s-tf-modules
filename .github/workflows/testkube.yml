# This workflow sets up Testkube Kubernetes Tests

name: Testkube Kubernetes Tests

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

permissions:
  contents: read

jobs:
  testkube:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Updating Ubuntu
        run: |
          sudo apt update
          sudo apt -y upgrade

      - name: Adding Kubernetes Repositories
        run: |
          sudo apt-get install -y apt-transport-https ca-certificates curl
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add
          echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" >> ~/kubernetes.list
          sudo mv ~/kubernetes.list /etc/apt/sources.list.d
          sudo apt update

      - name: Installing Kubernetes Tools
        run: |
          sudo apt-get install -y kubelet kubeadm kubectl kubernetes-cni
          sudo apt-mark hold kubelet kubeadm kubectl

      - name: Installing Containerd
        run: |
          sudo apt-get update
          sudo apt-get install \
              ca-certificates \
              curl \
              gnupg \
              lsb-release -y
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt remove containerd
          sudo apt update
          sudo apt install containerd.io -y
          sudo rm /etc/containerd/config.toml
          sudo systemctl restart containerd

      - name: Disabling swap
        run: |
          sudo sed -ri '/\sswap\s/s/^#?/#/' /etc/fstab
          sudo swapoff -a

      - name: Initializing Kubernetes Cluster
        run: |
          sudo systemctl enable kubelet
          sudo kubeadm init --v=5 \
          --upload-certs \
          --control-plane-endpoint 127.0.0.1:6443 \
          --pod-network-cidr=172.18.0.0/16 \
          --ignore-preflight-errors=NumCPU

      - name: Configuring kubectl and getting Cluster Info
        run: |
          sudo mkdir -p $HOME/.kube
          sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
          sudo chown $(id -u):$(id -g) $HOME/.kube/config
          kubeadm token create --print-join-command
          kubectl cluster-info
          kubectl get pods -n kube-system
          kubectl get nodes
          export KUBECONFIG=$HOME/.kube/config
          echo "kubeconfig-file-location:" $KUBECONFIG
          echo "current-context:" $(kubectl config current-context)
          export KUBE_CONFIG_CONTEXT=$(kubectl config current-context)
          echo "kubernetes_config_file=\"$KUBECONFIG\"" >> min.tfvars
          echo "kubernetes_config_context=\"$KUBE_CONFIG_CONTEXT\"" >> min.tfvars

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -var-file="min.tfvars" -out out.tfplan

      - name: Terraform Apply
        id: apply
        if: github.event_name == 'pull_request'
        run: terraform apply -input=false out.tfplan

      - name: Create Testkube Tests
        id: create_tests
        uses: kubeshop/testkube-docker-action@v1
        with:
          command: create
          resource: test
          namespace: testkube
          parameters: "--name curl-test --type curl/test --test-content-type git-file --git-uri https://github.com/Element84/swoop.git --git-branch hm/testkube --git-path tests/testkube/curltest.json"

      - name: Run Testkube Tests
        id: run_tests
        uses: kubeshop/testkube-docker-action@v1
        with:
          command: run
          resource: test
          parameters: "--watch curl-test"
