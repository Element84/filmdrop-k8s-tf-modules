# This workflow sets up Testkube Kubernetes Tests

name: Testkube Kubernetes Tests

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

permissions:
  contents: read

jobs:
  testkube:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Create k3d Cluster
        uses: nolar/setup-k3d-k3s@v1
        with:
          k3d-args: --no-lb

      - name: Configuring kube context and getting cluster info
        run: |
          export KUBECONFIG=${HOME}/.kube/config
          kubectl cluster-info
          kubectl get pods -n kube-system
          kubectl get nodes
          echo "kubeconfig-file-location:" $KUBECONFIG
          echo "current-context:" $(kubectl config current-context)
          export KUBE_CONFIG_CONTEXT=$(kubectl config current-context)
          echo "kubernetes_config_file=\"$KUBECONFIG\"" >> min.tfvars
          echo "kubernetes_config_context=\"$KUBE_CONFIG_CONTEXT\"" >> min.tfvars

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -var-file="min.tfvars" -out out.tfplan

      - name: Terraform Apply
        id: apply
        if: github.event_name == 'pull_request'
        run: terraform apply -input=false out.tfplan

      - name: Installing Testkube
        run: |
          wget -qO - https://repo.testkube.io/key.pub | sudo apt-key add -
          echo "deb https://repo.testkube.io/linux linux main" | sudo tee -a /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get install -y testkube
          kubectl testkube install --no-confirm
          kubectl port-forward -n testkube svc/testkube-api-server 8088:8088 &
          testkube config api-uri http://127.0.0.1:8088/v1

      - name: Create Testkube Tests
        run: |
          testkube create test --namespace testkube --name curl-test --type curl/test --test-content-type git-file --git-uri https://github.com/Element84/swoop.git --git-branch hm/testkube --git-path tests/testkube/curltest.json

      - name: Running Testkube Tests
        run: |
          testkube run test --watch curl-test
